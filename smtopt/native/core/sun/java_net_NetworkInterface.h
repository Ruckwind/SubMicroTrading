/*******************************************************************************
 * Copyright (c) 2015 Low Latency Trading Limited  :  Author Richard Rose
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at	http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing,  software distributed under the License 
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 *******************************************************************************/
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class java_net_NetworkInterface */

#ifndef _Included_java_net_NetworkInterface
#define _Included_java_net_NetworkInterface
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     java_net_NetworkInterface
 * Method:    getByIndex
 * Signature: (I)Ljava/net/NetworkInterface;
 */
JNIEXPORT jobject JNICALL Java_java_net_NetworkInterface_getByIndex
  (JNIEnv *, jclass, jint);

/*
 * Class:     java_net_NetworkInterface
 * Method:    getAll
 * Signature: ()[Ljava/net/NetworkInterface;
 */
JNIEXPORT jobjectArray JNICALL Java_java_net_NetworkInterface_getAll
  (JNIEnv *, jclass);

/*
 * Class:     java_net_NetworkInterface
 * Method:    getByName0
 * Signature: (Ljava/lang/String;)Ljava/net/NetworkInterface;
 */
JNIEXPORT jobject JNICALL Java_java_net_NetworkInterface_getByName0
  (JNIEnv *, jclass, jstring);

/*
 * Class:     java_net_NetworkInterface
 * Method:    getByInetAddress0
 * Signature: (Ljava/net/InetAddress;)Ljava/net/NetworkInterface;
 */
JNIEXPORT jobject JNICALL Java_java_net_NetworkInterface_getByInetAddress0
  (JNIEnv *, jclass, jobject);

/*
 * Class:     java_net_NetworkInterface
 * Method:    getSubnet0
 * Signature: (Ljava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_java_net_NetworkInterface_getSubnet0
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     java_net_NetworkInterface
 * Method:    getBroadcast0
 * Signature: (Ljava/lang/String;I)Ljava/net/Inet4Address;
 */
JNIEXPORT jobject JNICALL Java_java_net_NetworkInterface_getBroadcast0
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     java_net_NetworkInterface
 * Method:    isUp0
 * Signature: (Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_isUp0
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     java_net_NetworkInterface
 * Method:    isLoopback0
 * Signature: (Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_isLoopback0
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     java_net_NetworkInterface
 * Method:    supportsMulticast0
 * Signature: (Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_supportsMulticast0
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     java_net_NetworkInterface
 * Method:    isP2P0
 * Signature: (Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_isP2P0
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     java_net_NetworkInterface
 * Method:    getMacAddr0
 * Signature: ([BLjava/lang/String;I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_java_net_NetworkInterface_getMacAddr0
  (JNIEnv *, jclass, jbyteArray, jstring, jint);

/*
 * Class:     java_net_NetworkInterface
 * Method:    getMTU0
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_java_net_NetworkInterface_getMTU0
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     java_net_NetworkInterface
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_net_NetworkInterface_init
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
